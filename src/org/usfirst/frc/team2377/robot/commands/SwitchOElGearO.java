// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team2377.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc.team2377.robot.Robot;
import org.usfirst.frc.team2377.robot.RobotMap;
import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.*;

public class SwitchOElGearO extends Command {
	private boolean highGear = true;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public SwitchOElGearO() {
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveSystem);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
		//TODO hommie, figure out if the limit switch is true or false when closed 
		//TODO hommie, figure out which direction is positive and negative
    		if(Robot.oi.manipulatorJoystick.getRawButton(5))//TODO
			{
    			//left bumper
				//if gear is in  high gear then switch gear
    			if(highGear==true) {
    				//switch gear 
    				//make solenoid and switch value of it here
    				RobotMap.switchGear.set(false);
    				highGear=false;
    			}
			}
    		if(Robot.oi.manipulatorJoystick.getRawButton(6)==true)
    		{
    			//right bumper
    			// if gear is in low gear switch gear
    			if(highGear==false) {
    				//switch gearboi
    				//make solenoid and switch value of it here
    				RobotMap.switchGear.set(true);
    				highGear=true;
    			}
    		}
    	}
		//Robot.oi.manipulatorJoystick.getRawButtonPressed(button)
    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    @Override
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}